"use client";

import React from "react";
import { VulnerabilityCard } from "@/components/vulnerability-card";
import { CodeDialog } from "@/components/code-dialog";
import { motion } from "framer-motion";

import { Card, CardContent } from "@/components/ui/card";

interface Vulnerability {
  vulnerability: string;
  suggestion: string;
  improved_code: string;
  unchanged_code: string;
  rating: number;
}

interface FileContent {
  file_name: string;
  content: Vulnerability[];
  score: number;
}

type VulnerabilityData = [
  { [filename: string]: FileContent[] },
  number,
  number,
  number,
  number,
  number,
  number,
  { [filename: string]: number }
];

const VulnerabilityDashboard: React.FC<{ data: VulnerabilityData }> = ({
  data,
}) => {
  const [expandedCard, setExpandedCard] = React.useState<string | null>(null);
  const [showImprovedCode, setShowImprovedCode] = React.useState<string | null>(
    null
  );
  const [codeDialogOpen, setCodeDialogOpen] = React.useState(false);
  const [selectedCode, setSelectedCode] = React.useState("");
  const [selectedUnchangedCode, setSelectedUnchangedCode] = React.useState("");
  const [selectedFileName, setSelectedFileName] = React.useState("");

  const getRatingColor = (rating: number) => {
    const colors = ["#4ade80", "#fbbf24", "#fb923c", "#f87171"];
    return colors[Math.min(Math.floor(rating) - 1, 3)];
  };

  const toggleCard = (cardId: string) => {
    setExpandedCard(expandedCard === cardId ? null : cardId);
    setShowImprovedCode(null);
  };

  const toggleImprovedCode = (cardId: string) => {
    setShowImprovedCode(showImprovedCode === cardId ? null : cardId);
  };

  const openCodeDialog = (
    code: string,
    unchangedCode: string,
    fileName: string
  ) => {
    setSelectedCode(code);
    setSelectedUnchangedCode(unchangedCode);
    setSelectedFileName(fileName);
    setCodeDialogOpen(true);
  };

  const fileData = data[0];

  return (
    <div className="min-h-screen bg-black text-white p-8">
      <Card className="bg-gradient-to-br from-gray-900 to-black border-gray-800 shadow-2xl">
        <CardContent className="p-8">
          <h1 className="text-5xl font-bold mb-12 text-center bg-clip-text text-transparent bg-gradient-to-r from-blue-400 to-purple-600">
            Vulnerability Dashboard
          </h1>
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ duration: 0.5 }}
          >
            {Object.entries(fileData).map(([filename, fileContents]) => (
              <div key={filename} className="mb-12">
                <h2 className="text-3xl font-semibold mb-6 text-blue-300">
                  {filename}
                </h2>
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                  {fileContents.map((content: any, contentIndex: number) =>
                    content.content.map(
                      (vulnerability: any, vulIndex: number) => (
                        <VulnerabilityCard
                          key={`${filename}-${contentIndex}-${vulIndex}`}
                          filename={filename}
                          content={content}
                          vulnerability={vulnerability}
                          contentIndex={contentIndex}
                          vulIndex={vulIndex}
                          expandedCard={expandedCard}
                          showImprovedCode={showImprovedCode}
                          toggleCard={toggleCard}
                          toggleImprovedCode={toggleImprovedCode}
                          openCodeDialog={openCodeDialog}
                          getRatingColor={getRatingColor}
                        />
                      )
                    )
                  )}
                </div>
              </div>
            ))}
          </motion.div>
        </CardContent>
      </Card>
      <CodeDialog
        isOpen={codeDialogOpen}
        onClose={() => setCodeDialogOpen(false)}
        code={selectedCode}
        unchangedCode={selectedUnchangedCode}
        fileName={selectedFileName}
      />
    </div>
  );
};

export default VulnerabilityDashboard;
